name: Firebase Distribution
run-name: Build & Deploy App to Firebase Distribution
defaults:
  run:
    shell: bash

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+\+[0-9]+'

env:
  PROPERTIES_PATH: "./prod.properties"
  KEY_ALIAS: "flutter-release"
  STORE_FILE: "../prod.jks"
  ANDROID_APP_ID: "1:226053157885:android:e6fe1778548ec71fd09f94"

jobs:
  android:
    name: Build & Push Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          clean: false

      - name: Extract flutter version
        run: |
          FLUTTER_VERSION=$(grep '"flutter":' .fvmrc | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          echo "FLUTTER_VERSION=$FLUTTER_VERSION" >> $GITHUB_ENV

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Prepare Project
        run: flutter pub get

      - name: Clean & Generate App
        run: |
          flutter clean && rm -rf **/*.{freezed,g}.dart
          flutter pub get
          dart run build_runner build --delete-conflicting-outputs

      - name: Write keys
        working-directory: ./android
        run: |
          echo keyPassword=\${{ secrets.JKS_PASSWORD }} > ${{env.PROPERTIES_PATH}}
          echo storePassword=\${{ secrets.JKS_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo keyAlias=\${{ env.KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}
          echo storeFile=\${{ env.STORE_FILE }} >> ${{env.PROPERTIES_PATH}}
          echo "${{ secrets.JKS_BASE64 }}" | base64 --decode > ./prod.jks

      - name: Build Android APK
        run: flutter build apk -t lib/main_production.dart --flavor production --release

      - name: "Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Firebase
        run: npm install -g firebase-tools

      - name: Upload APP to Firebase
        uses: nickwph/firebase-app-distribution-action@v1.2.2
        with:
          app: ${{ env.ANDROID_APP_ID }}
          credentials: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          release-notes-file: ./release-notes.txt
          file: ./build/app/outputs/flutter-apk/app-production-release.apk
