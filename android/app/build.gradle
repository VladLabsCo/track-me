plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def loadKeystoreProperties(flavorName) {
    def properties = new Properties()
    def propertiesFile = rootProject.file("${flavorName}.properties")
    if (propertiesFile.exists()) {
        properties.load(new FileInputStream(propertiesFile))
    }
    return properties
}

android {
    namespace "it.vladlabs.track_me"
    compileSdkVersion 35
    ndkVersion "27.0.12077973"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId "it.vladlabs.track_me"
        minSdkVersion 26
        targetSdkVersion 35
        versionCode flutter.versionCode
        versionName flutter.versionName
    }

    signingConfigs {
        dev {
            def devProperties = loadKeystoreProperties("dev")
            keyAlias devProperties['keyAlias']
            keyPassword devProperties['keyPassword']
            storeFile devProperties['storeFile'] ? file(devProperties['storeFile']) : null
            storePassword devProperties['storePassword']
        }
        prod {
            def prodProperties = loadKeystoreProperties("prod")
            keyAlias prodProperties['keyAlias']
            keyPassword prodProperties['keyPassword']
            storeFile prodProperties['storeFile'] ? file(prodProperties['storeFile']) : null
            storePassword prodProperties['storePassword']
        }
    }

    flavorDimensions += "default"

    productFlavors { 
        create("development") {
            dimension "default"
            applicationIdSuffix ".dev"
            manifestPlaceholders = [appName: "[DEV] TrackMe"]
        }
        create("production") {
            dimension "default"
            manifestPlaceholders = [appName: "TrackMe"]
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.dev
        }
        release {
            productFlavors.all { flavor ->
                if (flavor.name == "development") {
                    signingConfig signingConfigs.dev
                } else if (flavor.name == "production") {
                    signingConfig signingConfigs.prod
                }
            }
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }
}

flutter {
    source '../..'
}
